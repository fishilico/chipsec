name: Test chipsec_main

on: [push, pull_request]

jobs:
  ubuntu-py3-test:
    strategy:
      matrix:
        ubuntu-version:
          - ubuntu-20.04
          - ubuntu-18.04
          - ubuntu-16.04
    runs-on: ${{ matrix.ubuntu-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update -q
        sudo apt-get install -qqy dkms python3-setuptools nasm

    - name: Build the driver with Python 3
      run: python3 setup.py build_ext -i

    - name: Build the driver with DKMS
      run: |
        KERNEL_VER="$(uname -r)"
        CHIPSEC_MODULE_VER="$(cat chipsec/VERSION)"
        echo "Building chipsec ${CHIPSEC_MODULE_VER} for Linux kernel ${KERNEL_VER}"
        sudo dkms add drivers/linux
        sudo dkms install -m chipsec -v "${CHIPSEC_MODULE_VER}" -k "${KERNEL_VER}"

    - name: Install chipsec
      run: sudo python3 setup.py install

    - name: Run chipsec_main
      run: sudo chipsec_main

  ubuntu-py2-test:
    strategy:
      matrix:
        ubuntu-version:
          - ubuntu-20.04
          - ubuntu-18.04
          - ubuntu-16.04
    runs-on: ${{ matrix.ubuntu-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update -q
        sudo apt-get install -qqy python-setuptools nasm

    - name: Build the driver with Python 2
      run: python2 setup.py build_ext -i

    - name: Build the driver with DKMS
      run: |
        KERNEL_VER="$(uname -r)"
        CHIPSEC_MODULE_VER="$(cat chipsec/VERSION)"
        echo "Building chipsec ${CHIPSEC_MODULE_VER} for Linux kernel ${KERNEL_VER}"
        sudo dkms add drivers/linux
        sudo dkms install -m chipsec -v "${CHIPSEC_MODULE_VER}" -k "${KERNEL_VER}"

    - name: Install chipsec
      run: sudo python2 setup.py install

    - name: Run chipsec_main
      run: sudo chipsec_main

  windows-test:
    runs-on: windows-latest

    strategy:
      matrix:
        python:
          - 3.9
          - 3.8
          - 3.7

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      shell: bash
      run: pip install pywin32

    - name: Build Windows driver
      shell: bash
      run: python3 setup.py build_ext -i

    - name: Upload Windows driver
      uses: actions/upload-artifact@v2
      with:
        name: drivers_win7_x64
        path: drivers/win7/x64

    - name: Create a temporary certificate to sign the driver
      shell: cmd
      run: makecert -r -n "CN=Chipsec" -ss ChipsecCertStore -sr LocalMachine

    - name: Sign the driver
      shell: cmd
      run: sign64_sys.bat
      working-directory: drivers/win7/sign

    - name: Upload Windows signed driver
      uses: actions/upload-artifact@v2
      with:
        name: drivers_win7_sign
        path: drivers/win7/sign

    - name: Install chipsec
      shell: bash
      run: python3 setup.py install

    - name: Copy the signed driver to chipsec directory
      shell: bash
      run: cp -f drivers/win7/sign/chipsec_hlpr.sys drivers/win7/x64/chipsec_hlpr.sys  

    - name: Run chipsec_main
      shell: bash
      run: chipsec_main
